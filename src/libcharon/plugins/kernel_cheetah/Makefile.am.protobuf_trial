PROTOBUF_C_CLIENT_LDOPTS=-lprotobuf-c

PROTOC_C=protoc-c

PROTOBUF_INCLUDES=-I.

PROTOBUF_CFILES = $(filter %.pb-c.c,$(SOURCES))

PROTOBUF_SRCS = $(PROTOBUF_CFILES) $(PROTOBUF_HFILES)

# Rules
%.pb-c.c %.pb-c.h: %.proto
	$(PROTOC_C) -I. --proto_path=$(srcdir) --c_out=. ./*.proto

CLEANFILES = $(PROTOBUF_SRCS)

BUILT_SRCS = $(PROTOBUF_SRCS)

PROTOBUF_PACKAGE = 

lib_LTLIBRARIES = libquagga_pb.la
libquagga_pb_la_LDFLAGS = -version-info 0:0:0

if HAVE_PROTOBUF
protobuf_srcs =					\
	qpb_allocator.c

protobuf_srcs_nodist =				\
	qpb.pb-c.c						\
	fpm.pb-c.c						\
	proto_def.pb-c.c					\
	notifications.pb-c.c			\
	nanomsg_transport.pb-c.c		\
	neighbor_provision.pb-c.c		\
	nanoserver.pb-c.c
	
endif

libquagga_pb_la_SOURCES =			\
	linear_allocator.h			\
	qpb.h					\
	qpb.c					\
	qpb_allocator.h				\
	fpm.h					\
	fpm_pb.h				\
	nano_server.h				\
	nano_server.c				\	
	$(protobuf_srcs)

nodist_libquagga_pb_la_SOURCES = $(protobuf_srcs_nodist)

CLEANFILES = $(Q_CLEANFILES)
BUILT_SOURCES = $(Q_PROTOBUF_SRCS)
EXTRA_DIST = qpb.proto


AM_CPPFLAGS = \
	-I${linux_headers} \
	-I$(top_srcdir)/src/libstrongswan \
	-I$(top_srcdir)/src/libcharon

AM_CFLAGS = \
	$(PLUGIN_CFLAGS)

if MONOLITHIC
noinst_LTLIBRARIES = libstrongswan-kernel-cheetah.la
else
plugin_LTLIBRARIES = libstrongswan-kernel-cheetah.la
endif

libstrongswan_kernel_cheetah_la_SOURCES = \
	kernel_cheetah_plugin.h kernel_cheetah_plugin.c \
	kernel_cheetah_ipsec.h kernel_cheetah_ipsec.c \
	nano_server.h nanl_server.c

libstrongswan_kernel_cheetah_la_LDFLAGS = -module -avoid-version
